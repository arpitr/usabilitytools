<?php

/**
 * @file
 * Integrates the UsabilityTools to track user activity on website.
 */
define('USABILITYTOOLS_VISIBILITY_NOTLISTED', 0);
define('USABILITYTOOLS_VISIBILITY_LISTED', 1);
define('USABILITYTOOLS_VISIBILITY_ROLE_INC', 1);
define('USABILITYTOOLS_VISIBILITY_ROLE_EXC', 0);

/**
 * Implements hook_menu().
 */
function usabilitytools_menu() {
  $items['admin/config/services/usabilitytools'] = array(
    'title' => 'Usability Tools Settings',
    'description' => 'Enter your Usabilitytools API Key.',
    'file' => 'usabilitytools.admin.inc',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('usabilitytools_admin'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
    'weight' => 0,
  );
  return $items;
}

/**
 * Implements hook_preprocess_html().
 */
function usabilitytools_preprocess_html() {
  global $user;
  $visibility = variable_get('usabilitytools_visibility', USABILITYTOOLS_VISIBILITY_NOTLISTED);
  $paths = strtolower(variable_get('usabilitytools_paths', ''));
  $path = drupal_strtolower(drupal_get_path_alias($_GET['q']));
  $page_match = drupal_match_path($path, $paths);
  if ($path != $_GET['q']) {
    $page_match = $page_match || drupal_match_path($_GET['q'], $paths);
  }
  $visibility_roles = variable_get('usabilitytools_visibility_roles', USABILITYTOOLS_VISIBILITY_ROLE_EXC);
  $enabled = $visibility_roles;
  $roles = variable_get('usabilitytools_roles', array());
  if (array_sum($roles) > 0) {
    // One or more roles are selected.
    foreach (array_keys($user->roles) as $rid) {
      // Is the current user a member of one of these roles?
      if (isset($roles[$rid]) && $rid == $roles[$rid]) {
        // Current user is a member of a  role that should be tracked/excluded from tracking.
        $enabled = $visibility_roles;
        break;
      }
    }
  }
  else {
    // No role is selected for tracking, therefore all roles should be tracked.
    $enabled = FALSE;
  }
  $show_on_this_page = !($visibility xor $page_match);
  $add_widget = $show_on_this_page && $enabled;
  if ($add_widget) {
    usabilitytools_add_usabilitytools();
  }
}

/**
 * Helper function to add usabilitytools widget to the current page.
 */
function usabilitytools_add_usabilitytools() {
  // Add global settings and scripts to the page.
  drupal_add_js(array(
      'usabilityTools' => array(
        'API' => variable_get('usabilitytools_apikey', '')
      )
    ),
    'setting'
  );
  drupal_add_js(
    drupal_get_path('module', 'usabilitytools') . '/js/usabilitytools.js');
}
